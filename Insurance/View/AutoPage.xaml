<Page x:Class="Insurance.View.AutoPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Insurance.View"
      xmlns:global="clr-namespace:Insurance"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="AutoPage">

    <Page.Resources>

        <global:BoolToVisibility x:Key="BoolToVisibilityConverter"/>
        
        <Style TargetType="Button" x:Key="AddButton">
            <Setter Property="Template" >
                <Setter.Value >
                    <ControlTemplate TargetType="{x:Type Button}" >
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="MouseOverAnimation">
                                <ColorAnimation Storyboard.TargetName="ButtonBorderColor" Storyboard.TargetProperty="Color" To="#bb9fd6" Duration="0:0:0.2" />
                                
                                <ColorAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(Foreground).Color" To="White" Duration="0:0:0.2" />
                            </Storyboard>
                            <Storyboard x:Key="MouseOutAnimation" FillBehavior="Stop">
                                <ColorAnimation Storyboard.TargetName="ButtonBorderColor" Storyboard.TargetProperty="Color" To="Transparent" Duration="0:0:0.2" />
                               
                                <ColorAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(Foreground).Color" To="Black" Duration="0:0:0.2" />
                            </Storyboard>
                            <Storyboard x:Key="MouseDownAnimation">
                                <ColorAnimation Storyboard.TargetName="ButtonBorderColor" Storyboard.TargetProperty="Color" To="DarkViolet" Duration="0:0:0.1" />
                                
                                <ColorAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(Foreground).Color" To="White" Duration="0:0:0.1" />
                            </Storyboard>
                            <Storyboard x:Key="MouseUpAnimation">
                                <ColorAnimation Storyboard.TargetName="ButtonBorderColor" Storyboard.TargetProperty="Color" To="DarkViolet" Duration="0:0:0.2" />
                                
                                <ColorAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(Foreground).Color" To="White" Duration="0:0:0.2" />
                            </Storyboard>
                        </ControlTemplate.Resources>

                        <Border x:Name="ButtonBorder" Tag="{TemplateBinding Tag}"  CornerRadius="5" BorderBrush="Transparent" BorderThickness="1" Margin="10" MinWidth="200" Height="40">
                            <Border.Background>
                                <SolidColorBrush x:Name="ButtonBorderColor" Color="Transparent"></SolidColorBrush>
                            </Border.Background>
                            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                <materialDesign:PackIcon
                                    Name="Icon"
                                    Tag="{TemplateBinding Tag}"
                                    Kind="{Binding Tag, RelativeSource={x:Static RelativeSource.Self}}"
                                    Foreground="Black"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Margin="10, 0, 10, 0"
                                    Width="30"
                                    Height="25" />
                            </StackPanel>
                        </Border>

                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseOverAnimation}" />
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseOutAnimation}" />
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseDownAnimation}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseOutAnimation}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                            
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="RadioButton" x:Key="AutoMiniButton">
            <Setter Property="Template" >
                <Setter.Value >
                    <ControlTemplate TargetType="{x:Type RadioButton}" >
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="MouseOverAnimation">
                                <ColorAnimation Storyboard.TargetName="ButtonBorderColor" Storyboard.TargetProperty="Color" To="#bb9fd6" Duration="0:0:0.2" />
                                <ColorAnimation Storyboard.TargetName="Name" Storyboard.TargetProperty="(Foreground).Color" To="White" Duration="0:0:0.2"/>
                                <ColorAnimation Storyboard.TargetName="Number" Storyboard.TargetProperty="(Foreground).Color" To="White" Duration="0:0:0.2"/>
                            </Storyboard>
                            <Storyboard x:Key="MouseOutAnimation"  FillBehavior="Stop">
                                <ColorAnimation Storyboard.TargetName="ButtonBorderColor" Storyboard.TargetProperty="Color" To="Transparent" Duration="0:0:0.2" />
                                <ColorAnimation Storyboard.TargetName="Name" Storyboard.TargetProperty="(Foreground).Color" To="Black" Duration="0:0:0.2"/>
                                <ColorAnimation Storyboard.TargetName="Number" Storyboard.TargetProperty="(Foreground).Color" To="Black" Duration="0:0:0.2"/>
                            </Storyboard>
                            <Storyboard x:Key="MouseDownAnimation">
                                <ColorAnimation Storyboard.TargetName="ButtonBorderColor" Storyboard.TargetProperty="Color" To="Violet" Duration="0:0:0.2" />
                                <ColorAnimation Storyboard.TargetName="Name" Storyboard.TargetProperty="(Foreground).Color" To="White" Duration="0:0:0.2"/>
                                <ColorAnimation Storyboard.TargetName="Number" Storyboard.TargetProperty="(Foreground).Color" To="White" Duration="0:0:0.2"/>
                            </Storyboard>
                            <Storyboard x:Key="MouseUpAnimation">
                                <ColorAnimation Storyboard.TargetName="ButtonBorderColor" Storyboard.TargetProperty="Color" To="DarkViolet" Duration="0:0:0.2" />
                                <ColorAnimation Storyboard.TargetName="Name" Storyboard.TargetProperty="(Foreground).Color" To="White" Duration="0:0:0.2"/>
                                <ColorAnimation Storyboard.TargetName="Number" Storyboard.TargetProperty="(Foreground).Color" To="White" Duration="0:0:0.2"/>
                            </Storyboard>
                        </ControlTemplate.Resources>


                        <Border x:Name="ButtonBorder" Tag="{TemplateBinding Tag}"  CornerRadius="5" BorderBrush="Transparent" BorderThickness="1" Margin="5">

                            <Border.Background>
                                <SolidColorBrush x:Name="ButtonBorderColor" Color="Transparent"></SolidColorBrush>
                            </Border.Background>
                            <StackPanel Orientation="Horizontal">

                                <TextBlock x:Name="Name"
                                           Text="{Binding Name}"
                                           Foreground="Black"
                                           HorizontalAlignment="Right"
                                           VerticalAlignment="Top"
                                           FontFamily="David"
                                           FontWeight="Bold"
                                           FontSize="20"
                                           MaxWidth="150"
                                           Margin="10, 10, 10, 10"/>
                                
                                <TextBlock x:Name="Number"
                                           Text="{Binding Number}"
                                           Foreground="Black"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           FontFamily="Bahnschrift"
                                           FontSize="15"
                                           FontWeight="Light"/>

                                <TextBlock x:Name="Id" Text="{Binding Id}"  Visibility="Hidden"/>
                            </StackPanel>
                        </Border>

                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="False" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseOverAnimation}" />
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseOutAnimation}" />
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>

                            <Trigger Property="IsChecked" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseUpAnimation}" />
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseOutAnimation}" />
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="IteractButton">
            <Setter Property="Template" >
                <Setter.Value >
                    <ControlTemplate TargetType="{x:Type Button}" >
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="MouseOverAnimation">
                                <ColorAnimation Storyboard.TargetName="ButtonBorderColor" Storyboard.TargetProperty="Color" To="#bb9fd6" Duration="0:0:0.2" />
                                <ColorAnimation Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground).Color" To="White" Duration="0:0:0.2"/>

                            </Storyboard>
                            <Storyboard x:Key="MouseOutAnimation" FillBehavior="Stop">
                                <ColorAnimation Storyboard.TargetName="ButtonBorderColor" Storyboard.TargetProperty="Color" To="Transparent" Duration="0:0:0.2" />
                                <ColorAnimation Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground).Color" To="Black" Duration="0:0:0.2"/>

                            </Storyboard>
                            <Storyboard x:Key="MouseDownAnimation">
                                <ColorAnimation Storyboard.TargetName="ButtonBorderColor" Storyboard.TargetProperty="Color" To="DarkViolet" Duration="0:0:0.1" />
                                <ColorAnimation Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground).Color" To="White" Duration="0:0:0.1"/>

                            </Storyboard>
                            <Storyboard x:Key="MouseUpAnimation">
                                <ColorAnimation Storyboard.TargetName="ButtonBorderColor" Storyboard.TargetProperty="Color" To="DarkViolet" Duration="0:0:0.2" />
                                <ColorAnimation Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground).Color" To="White" Duration="0:0:0.2"/>

                            </Storyboard>
                        </ControlTemplate.Resources>

                        <Border x:Name="ButtonBorder" Tag="{TemplateBinding Tag}"  CornerRadius="5" BorderBrush="Transparent" BorderThickness="1" Margin="10" MinWidth="200" Height="40">
                            <Border.Background>
                                <SolidColorBrush x:Name="ButtonBorderColor" Color="Transparent"></SolidColorBrush>
                            </Border.Background>
                            <ContentPresenter TextBlock.FontSize="18" TextBlock.FontWeight="DemiBold" x:Name="ContentPresenter" VerticalAlignment="Center" HorizontalAlignment="Center">
                            </ContentPresenter>
                        </Border>

                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseOverAnimation}" />
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseOutAnimation}" />
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseDownAnimation}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseOutAnimation}"/>
                                </Trigger.ExitActions>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="ScrollBarTrackThumb"
        TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Width="Auto"
                                Height="Auto"
                                Fill="Transparent" />
                            <Border x:Name="CornerScrollBarRectangle"
                            CornerRadius="5"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Width="Auto"
                            Height="Auto"
                            Margin="0,1,0,1"
                            Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag"
                                Value="Horizontal">
                                <Setter TargetName="CornerScrollBarRectangle"
                                Property="Width"
                                Value="Auto" />
                                <Setter TargetName="CornerScrollBarRectangle"
                                Property="Height"
                                Value="6" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled"
            Value="false" />
            <Setter Property="Foreground"
            Value="#ADABAB" />
            <Setter Property="Background"
            Value="Transparent" />
            <Setter Property="Width"
            Value="7" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot"
                        Width="7"
                        Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>
                            <Track x:Name="PART_Track"
                            Grid.Row="0"
                            IsDirectionReversed="true"
                            Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb"
                                    Background="{TemplateBinding Foreground}"
                                    Style="{DynamicResource ScrollBarTrackThumb}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp"
                                            Command="ScrollBar.PageDownCommand"
                                            Opacity="0"
                                            Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown"
                                            Command="ScrollBar.PageUpCommand"
                                            Opacity="0"
                                            Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb"
                                Property="IsMouseOver"
                                Value="true">
                                <Setter Value="{DynamicResource ButtonSelectBrush}"
                                TargetName="Thumb"
                                Property="Background" />
                            </Trigger>
                            <Trigger SourceName="Thumb"
                                Property="IsDragging"
                                Value="true">
                                <Setter Value="{DynamicResource DarkBrush}"
                                TargetName="Thumb"
                                Property="Background" />
                            </Trigger>

                            <Trigger Property="IsEnabled"
                                Value="false">
                                <Setter TargetName="Thumb"
                                Property="Visibility"
                                Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation"
                                Value="Horizontal">
                                <Setter TargetName="GridRoot"
                                Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track"
                                Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width"
                                Value="Auto" />
                                <Setter Property="Height"
                                Value="8" />
                                <Setter TargetName="Thumb"
                                Property="Tag"
                                Value="Horizontal" />
                                <Setter TargetName="PageDown"
                                Property="Command"
                                Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp"
                                Property="Command"
                                Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        

        <Style TargetType="TextBlock" x:Key="BoldText">
            <Setter Property="FontFamily" Value="Bahnschrift"/>
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style TargetType="TextBlock" x:Key="SemiText">
            <Setter Property="FontFamily" Value="Bahnschrift"/>
            <Setter Property="FontSize" Value="21"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="Margin" Value="10, 0, 10, 1"/>
        </Style>

    </Page.Resources>
    <materialDesign:TransitioningContent OpeningEffect="{materialDesign:TransitionEffect Kind=SlideInFromRight}">

        <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="5*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>


            <TextBlock
                Grid.Row="0"
                Grid.Column="0"
                HorizontalAlignment="Center"
                        VerticalAlignment="Center"                       
                        FontFamily="Bahnschrift"
                        FontSize="25"
                        FontWeight="Bold">
                Autos</TextBlock>

            <ScrollViewer Grid.Row="1" Grid.RowSpan="2">
                <StackPanel Orientation="Vertical" VerticalAlignment="Top">
                    <ItemsControl x:Name="items" ItemsSource="{Binding Autos}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <RadioButton 
                                            Style="{StaticResource AutoMiniButton}"
                                            GroupName="Autos"
                                            Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Page}}, Path=DataContext.OpenAutoInfo}"
                                            CommandParameter="{Binding Id}"/>

                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <Button Visibility="{Binding IsAgent, Converter={StaticResource BooleanToVisibilityConverter}}" Style="{StaticResource AddButton}" Tag="Add"  Command="{Binding AddCarCommand}"></Button>
                </StackPanel>
            </ScrollViewer>



        <StackPanel x:Name="ahaha" Orientation="Vertical" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" DataContext="{Binding currentAuto, NotifyOnTargetUpdated=True}">
            <StackPanel.Triggers>
                <EventTrigger RoutedEvent="Binding.TargetUpdated">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="00:00:0.5" BeginTime="00:00:00" From="0.0" To="1.0" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

            </StackPanel.Triggers>

                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Margin="10,20,10,45"
                    FontFamily="Bahnschrift"
                    FontSize="25"
                    FontWeight="Bold"
                    >
                    <TextBlock.Text>
                        
                        <MultiBinding StringFormat="{}{0} {1}">
                            <Binding Path="Brand"/>
                            <Binding Path="Model"/>
                        </MultiBinding>
                    </TextBlock.Text>

                </TextBlock>
            
                <StackPanel Orientation="Horizontal" >
                    <TextBlock Style="{StaticResource BoldText}" Margin="0, 0, 10, 0">Бренд:</TextBlock>
                    <TextBlock Style="{StaticResource SemiText}" Text="{Binding Brand}"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="0, 30, 0, 0">
                    <TextBlock Style="{StaticResource BoldText}" Margin="0, 0, 10, 0">Марка:</TextBlock>
                    <TextBlock Style="{StaticResource SemiText}" Text="{Binding Model}"/>
                </StackPanel>
            
                <StackPanel Orientation="Horizontal" Margin="0, 30, 0, 0">
                    <TextBlock Style="{StaticResource BoldText}" Margin="0, 0, 10, 0">Номер:</TextBlock>
                    <TextBlock Style="{StaticResource SemiText}" Text="{Binding NumberAuto}"/>
                </StackPanel>
            
                <StackPanel Orientation="Horizontal" Margin="0, 30, 0, 0">
                    <TextBlock Style="{StaticResource BoldText}" Margin="0, 0, 10, 0">Мощность двигателя:</TextBlock>
                    <TextBlock Style="{StaticResource SemiText}" Text="{Binding EnginePower}"/>
                </StackPanel>
            
                <StackPanel Orientation="Horizontal" Margin="0, 30, 0, 0">
                    <TextBlock Style="{StaticResource BoldText}" Margin="0, 0, 10, 0">Пробег:</TextBlock>
                    <TextBlock Style="{StaticResource SemiText}" Text="{Binding Run}"/>
                </StackPanel>
            
                <StackPanel Orientation="Horizontal" Margin="0, 30, 0, 0">
                    <TextBlock Style="{StaticResource BoldText}" Margin="0, 0, 10, 0">Номер ПТС:</TextBlock>
                    <TextBlock Style="{StaticResource SemiText}" Text="{Binding NumberPTS}"/>
                </StackPanel>
            
            </StackPanel>

        <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="1">
                <Button Visibility="{Binding IsAgent, Converter={StaticResource BooleanToVisibilityConverter}}" Style="{StaticResource IteractButton}" Content="Insurance" Command="{Binding InsuranceCommand}"/>
                <Button Visibility="{Binding IsAgent, Converter={StaticResource BooleanToVisibilityConverter}}" Style="{StaticResource IteractButton}" Content="Incident" Command="{Binding IncidentCommand}"/>
        </StackPanel>
    </Grid>
    </materialDesign:TransitioningContent>
</Page>
