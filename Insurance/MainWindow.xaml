<Window x:Class="Insurance.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Insurance"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        Title="MainWindow" Height="550" Width="1050"
        WindowStyle="None"
        Background="Transparent"
        AllowsTransparency="True">

    <Window.Resources>
        <local:BoolToVisibility x:Key="BoolToVisibilityConverter"/>
        <Style TargetType="RadioButton" x:Key="SideMenuButton">
            <Setter Property="Template" >
                <Setter.Value >
                    <ControlTemplate TargetType="{x:Type RadioButton}" >
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="MouseOverAnimation">
                                <ColorAnimation Storyboard.TargetName="ButtonBorderColor" Storyboard.TargetProperty="Color" To="#bb9fd6" Duration="0:0:0.2" />
                                <ColorAnimation Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground).Color" To="White" Duration="0:0:0.2"/>
                                <ColorAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(Foreground).Color" To="White" Duration="0:0:0.2" />
                            </Storyboard>
                            <Storyboard x:Key="MouseOutAnimation" FillBehavior="Stop">
                                <ColorAnimation Storyboard.TargetName="ButtonBorderColor" Storyboard.TargetProperty="Color" To="Transparent" Duration="0:0:0.2" />
                                <ColorAnimation Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground).Color" To="Black" Duration="0:0:0.2"/>
                                <ColorAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(Foreground).Color" To="Black" Duration="0:0:0.2" />
                            </Storyboard>
                            <Storyboard x:Key="MouseDownAnimation">
                                <ColorAnimation Storyboard.TargetName="ButtonBorderColor" Storyboard.TargetProperty="Color" To="Violet" Duration="0:0:0.2" />
                                <ColorAnimation Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground).Color" To="White" Duration="0:0:0.2"/>
                                <ColorAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(Foreground).Color" To="White" Duration="0:0:0.2" />
                            </Storyboard>
                            <Storyboard x:Key="MouseUpAnimation">
                                <ColorAnimation Storyboard.TargetName="ButtonBorderColor" Storyboard.TargetProperty="Color" To="DarkViolet" Duration="0:0:0.2" />
                                <ColorAnimation Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground).Color" To="White" Duration="0:0:0.2"/>
                                <ColorAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(Foreground).Color" To="White" Duration="0:0:0.2" />
                            </Storyboard>
                        </ControlTemplate.Resources>


                        <Border x:Name="ButtonBorder" Tag="{TemplateBinding Tag}"  CornerRadius="5" BorderBrush="Transparent" BorderThickness="1" Margin="10" Height="40">

                            <Border.Background>
                                <SolidColorBrush x:Name="ButtonBorderColor" Color="Transparent"></SolidColorBrush>
                            </Border.Background>
                            <StackPanel FlowDirection="LeftToRight" Orientation="Horizontal">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="3*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <materialDesign:PackIcon Grid.Column="0" Name="Icon" Tag="{TemplateBinding Tag}" Kind="{Binding Tag, RelativeSource={x:Static RelativeSource.Self}}" Foreground="Black" VerticalAlignment="Center"  Margin="10, 0, 10, 0" Width="30" Height="25" />
                                    <ContentPresenter Grid.Column="1" TextBlock.FontSize="18" TextBlock.FontWeight="DemiBold" x:Name="ContentPresenter" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    </ContentPresenter>
                                </Grid>
                            </StackPanel>
                        </Border>

                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="False" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseOverAnimation}" />
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseOutAnimation}" />
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>

                            <Trigger Property="IsChecked" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseUpAnimation}" />
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseOutAnimation}" />
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="IteractButton">
            <Setter Property="Template" >
                <Setter.Value >
                    <ControlTemplate TargetType="{x:Type Button}" >
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="MouseOverAnimation">
                                <ColorAnimation Storyboard.TargetName="ButtonBorderColor" Storyboard.TargetProperty="Color" To="#bb9fd6" Duration="0:0:0.2" />
                                <ColorAnimation Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground).Color" To="White" Duration="0:0:0.2"/>
                                <ColorAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(Foreground).Color" To="White" Duration="0:0:0.2" />
                            </Storyboard>
                            <Storyboard x:Key="MouseOutAnimation" FillBehavior="Stop">
                                <ColorAnimation Storyboard.TargetName="ButtonBorderColor" Storyboard.TargetProperty="Color" To="Transparent" Duration="0:0:0.2" />
                                <ColorAnimation Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground).Color" To="Black" Duration="0:0:0.2"/>
                                <ColorAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(Foreground).Color" To="Black" Duration="0:0:0.2" />
                            </Storyboard>
                            <Storyboard x:Key="MouseDownAnimation">
                                <ColorAnimation Storyboard.TargetName="ButtonBorderColor" Storyboard.TargetProperty="Color" To="Violet" Duration="0:0:0.2" />
                                <ColorAnimation Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground).Color" To="White" Duration="0:0:0.2"/>
                                <ColorAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(Foreground).Color" To="White" Duration="0:0:0.2" />
                            </Storyboard>
                            <Storyboard x:Key="MouseUpAnimation">
                                <ColorAnimation Storyboard.TargetName="ButtonBorderColor" Storyboard.TargetProperty="Color" To="DarkViolet" Duration="0:0:0.2" />
                                <ColorAnimation Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground).Color" To="White" Duration="0:0:0.2"/>
                                <ColorAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(Foreground).Color" To="White" Duration="0:0:0.2" />
                            </Storyboard>
                        </ControlTemplate.Resources>


                        <Border x:Name="ButtonBorder" Tag="{TemplateBinding Tag}"  CornerRadius="5" BorderBrush="Transparent" BorderThickness="1" Margin="10" Height="40">

                            <Border.Background>
                                <SolidColorBrush x:Name="ButtonBorderColor" Color="Transparent"></SolidColorBrush>
                            </Border.Background>
                            <StackPanel FlowDirection="LeftToRight" Orientation="Horizontal">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="3*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <materialDesign:PackIcon Grid.Column="0" Name="Icon" Tag="{TemplateBinding Tag}" Kind="{Binding Tag, RelativeSource={x:Static RelativeSource.Self}}" Foreground="Black" VerticalAlignment="Center"  Margin="10, 0, 10, 0" Width="30" Height="25" />
                                    <ContentPresenter Grid.Column="1" TextBlock.FontSize="18" TextBlock.FontWeight="DemiBold" x:Name="ContentPresenter" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    </ContentPresenter>
                                </Grid>
                            </StackPanel>
                        </Border>

                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseOverAnimation}" />
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseOutAnimation}" />
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>

                            
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Border x:Name="MainBorder" Background="White" CornerRadius="20" BorderThickness="2" BorderBrush="DarkGray">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="4*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Border Grid.ColumnSpan="2" Panel.ZIndex="2">
                <Rectangle  x:Name="DragRecranhle" MouseDown="DragRecranhle_MouseDown" Fill="Transparent" VerticalAlignment="Top" Height="30" />
            </Border>

            <StackPanel Panel.ZIndex="2" Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right" Height="auto" Grid.ColumnSpan="2">

                <Button Style="{DynamicResource MaterialDesignFlatAccentBgButton}" Height="30" BorderThickness="0" Background="Transparent">
                    <materialDesign:PackIcon Kind="ColorHelper" HorizontalAlignment="Center" Foreground="Black"/>
                </Button>
                
                <Button Style="{DynamicResource MaterialDesignFlatAccentBgButton}" Height="30" BorderThickness="0"
                        Command="{Binding MaxMinCommand}"
                        Background="Transparent" Cursor="Hand">
                    <materialDesign:PackIcon Kind="VectorArrangeBelow" HorizontalAlignment="Center" Foreground="Black"/>
                </Button>
                
                <Button x:Name="CloseButton" Style="{DynamicResource MaterialDesignFlatDarkBgButton}"
                        Background="DarkViolet" 
                        Grid.Column="2" Grid.Row="0"
                        Height="30" Width="auto"
                        materialDesign:ButtonAssist.CornerRadius="0,20,0,0" 
                        BorderThickness="0"  
                        Command="{Binding CloseCommand}"
                        Cursor="Hand">
                    <materialDesign:PackIcon Kind="Close" Foreground="White"/>
                </Button>
                
            </StackPanel>
            
            <Border Grid.Column="0" CornerRadius="20, 0, 0, 20">
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Color="White" Offset="0.1" />
                        <GradientStop Color="#dbd7fa" Offset="0.5" />
                        <GradientStop Color="White" Offset="0.9" />
                    </LinearGradientBrush>
                </Border.Background>
                
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon  
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Margin="10,20,0,100"
                            Height="28"
                            Width="28"
                            Kind="Heart"/>
                        <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Margin="10,20,10,100"
                        FontFamily="Bahnschrift"
                        FontSize="25"
                        FontWeight="Bold">
                        VasilevaIns</TextBlock>
                    </StackPanel>
                    <RadioButton x:Name="ClientButton"
                                 GroupName="SideMenu"
                            Command="{Binding NavigateCommand}"
                            CommandParameter="Clients"
                            Style="{StaticResource SideMenuButton}"
                            Cursor="Hand"
                            Tag="Person"
                            Visibility="{Binding IsAgent, Converter={StaticResource BooleanToVisibilityConverter}}">
                        Clients
                    </RadioButton>
                    <RadioButton x:Name="AutoButton"
                                 GroupName="SideMenu"
                            Command="{Binding NavigateCommand}"
                            CommandParameter="Auto"
                            Style="{StaticResource SideMenuButton}"
                            Cursor="Hand"
                                 Tag="Car">
                             Auto
                    </RadioButton>
                    <RadioButton x:Name="InsurancesButton"
                                 GroupName="SideMenu"
                            Command="{Binding NavigateCommand}"
                            CommandParameter="Insurance"
                            Style="{StaticResource SideMenuButton}"
                            Cursor="Hand"
                            Tag="Money">
                        Insurances
                    </RadioButton>
                    <RadioButton x:Name="IncidentsButton"                              
                        GroupName="SideMenu"
                            Command="{Binding NavigateCommand}"                          
                            CommandParameter="Incident"
                            Style="{StaticResource SideMenuButton}"
                            Cursor="Hand"
                            Tag="SailBoatCrash">
                        Incidents
                    </RadioButton>
                </StackPanel>
        
            </Border>
            <Button x:Name="LogOutButton"                              
                            Command="{Binding LogOutCommand}"                          
                            CommandParameter="LogOut"
                            Style="{StaticResource IteractButton}"
                            Cursor="Hand"
                            Tag="LogOut"
                         VerticalAlignment="Bottom">
                LogOut
            </Button>
            <Border Grid.ColumnSpan="2" Panel.ZIndex="1">
                <Frame x:Name="authFrame" NavigationUIVisibility="Hidden">
                </Frame>
            </Border>
            <Border Grid.Column="1" CornerRadius="0, 20, 20, 0">
                <Frame x:Name="mainFrame" NavigationUIVisibility="Hidden" />
            </Border>
        </Grid>
        
    </Border>
</Window>
